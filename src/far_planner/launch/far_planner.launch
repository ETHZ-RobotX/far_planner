import yaml
from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription
from launch.substitutions import LaunchConfiguration
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch_ros.actions import Node
from ament_index_python.packages import get_package_share_directory

def generate_launch_description():
    # Determine the path to the configuration file
    far_planner_path = get_package_share_directory('far_planner')
    config_path = far_planner_path + '/config/default.yaml'

    # Load the YAML file
    with open(config_path, 'r') as f:
        config = yaml.safe_load(f)

    print("Debug here 1")

    return LaunchDescription([
        DeclareLaunchArgument('odom_topic', default_value='/state_estimation'),
        DeclareLaunchArgument('terrain_cloud_topic', default_value='/terrain_map_ext'),
        DeclareLaunchArgument('terrain_local_topic', default_value='/terrain_map'),
        DeclareLaunchArgument('scan_cloud_topic', default_value='/registered_scan'),
        DeclareLaunchArgument('config', default_value='default'),

        Node(
            package='far_planner',
            executable='far_planner',
            name='far_planner',
            output='screen',
            parameters=[config],
            remappings=[
                ('/odom_world', LaunchConfiguration('odom_topic')),
                ('/terrain_cloud', LaunchConfiguration('terrain_cloud_topic')),
                ('/scan_cloud', LaunchConfiguration('scan_cloud_topic')),
                ('/terrain_local_cloud', LaunchConfiguration('terrain_local_topic'))
            ]
        ),
        
        Node(
            package='rviz2',
            executable='rviz2',
            name='far_rviz',
            arguments=['-d', get_package_share_directory('far_planner') + '/rviz/default.rviz'],
            respawn=False,
        ),

        # Including another launch file
        IncludeLaunchDescription(
            PythonLaunchDescriptionSource([get_package_share_directory('graph_decoder'), '/launch/decoder.launch'])
        )
    ])
